;; Analyzed by ClojureScript 1.7.170
{:use-macros {deftest devcards.core, defcard devcards.core}, :excludes #{}, :name cloze-devcards.core, :imports nil, :requires {cloze-devcards.egg cloze-devcards.egg, dc devcards.core, devcards.core devcards.core, sab sablono.core, sablono.core sablono.core}, :uses {eggs cloze-devcards.egg}, :defs {main {:protocol-inline nil, :meta {:file "/Users/conor/src/active/cloze-devcards/src/cloze_devcards/core.cljs", :line 21, :column 7, :end-line 21, :end-column 11, :arglists (quote ([]))}, :name cloze-devcards.core/main, :variadic false, :file "src/cloze_devcards/core.cljs", :end-column 11, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 21, :end-line 21, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros {dc devcards.core, devcards.core devcards.core, sab sablono.core, sablono.core sablono.core}, :cljs.analyzer/constants {:seen #{:path :func :name :documentation :cloze_devcards.core :main-obj :initial-data :options :first-card}, :order [:path :func :cloze_devcards.core :first-card :name :documentation :main-obj :initial-data :options]}, :doc nil}