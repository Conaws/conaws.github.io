;; Analyzed by ClojureScript 1.7.170
{:use-macros {reaction reagent.ratom, defcard-rg devcards.core, deftest devcards.core, defcard devcards.core, defcard-doc devcards.core}, :excludes #{}, :name cloze-devcards.egg, :imports nil, :requires {set clojure.set, reagent.session reagent.session, session reagent.session, reagent.core reagent.core, rx reagent.core, datascript.core datascript.core, mdb datascript.core, clojure.set clojure.set, rx-db posh.core, posh.core posh.core, str clojure.string, clojure.string clojure.string, cljs.reader cljs.reader}, :uses {pull posh.core, transact! posh.core}, :defs {egge {:name cloze-devcards.egg/egge, :file "src/cloze_devcards/egg.cljs", :line 14, :column 1, :end-line 14, :end-column 10, :meta {:file "/Users/conor/src/active/cloze-devcards/src/cloze_devcards/egg.cljs", :line 14, :column 6, :end-line 14, :end-column 10}}, rand-word {:protocol-inline nil, :meta {:file "/Users/conor/src/active/cloze-devcards/src/cloze_devcards/egg.cljs", :line 211, :column 7, :end-line 211, :end-column 16, :arglists (quote ([s]))}, :name cloze-devcards.egg/rand-word, :variadic false, :file "src/cloze_devcards/egg.cljs", :end-column 16, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 211, :end-line 211, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s]))}, cloze-string {:protocol-inline nil, :meta {:file "/Users/conor/src/active/cloze-devcards/src/cloze_devcards/egg.cljs", :line 232, :column 7, :end-line 232, :end-column 19, :arglists (quote ([text]))}, :name cloze-devcards.egg/cloze-string, :variadic false, :file "src/cloze_devcards/egg.cljs", :end-column 19, :method-params ([text]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 232, :end-line 232, :max-fixed-arity 1, :fn-var true, :arglists (quote ([text]))}, t_cloze_devcards$egg23144 {:num-fields 1, :protocols #{cljs.core/IMeta cljs.core/IWithMeta devcards.core/IDevcardOptions}, :name cloze-devcards.egg/t_cloze_devcards$egg23144, :file "src/cloze_devcards/egg.cljs", :type true, :anonymous true, :column 1, :line 269, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_cloze_devcards$egg23144 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cljs.core/IMeta cljs.core/IWithMeta devcards.core/IDevcardOptions}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([meta23145])), :file nil}, :protocols #{cljs.core/IMeta cljs.core/IWithMeta devcards.core/IDevcardOptions}, :name cloze-devcards.egg/->t_cloze_devcards$egg23144, :variadic false, :file "src/cloze_devcards/egg.cljs", :method-params ([meta23145]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 1, :factory :positional, :line 269, :max-fixed-arity 1, :fn-var true, :arglists (quote ([meta23145])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, s1 {:name cloze-devcards.egg/s1, :file "src/cloze_devcards/egg.cljs", :line 161, :column 1, :end-line 161, :end-column 8, :meta {:file "/Users/conor/src/active/cloze-devcards/src/cloze_devcards/egg.cljs", :line 161, :column 6, :end-line 161, :end-column 8}}, not-blank {:protocol-inline nil, :meta {:file "/Users/conor/src/active/cloze-devcards/src/cloze_devcards/egg.cljs", :line 499, :column 15, :end-line 499, :end-column 24, :arglists (quote ([setofstrings]))}, :name cloze-devcards.egg/not-blank, :variadic false, :file "src/cloze_devcards/egg.cljs", :end-column 24, :method-params ([setofstrings]), :protocol-impl nil, :arglists-meta (nil nil), :column 9, :line 499, :end-line 499, :max-fixed-arity 1, :fn-var true, :arglists (quote ([setofstrings]))}, seqf {:name cloze-devcards.egg/seqf, :file "src/cloze_devcards/egg.cljs", :line 452, :column 9, :end-line 452, :end-column 18, :meta {:file "/Users/conor/src/active/cloze-devcards/src/cloze_devcards/egg.cljs", :line 452, :column 14, :end-line 452, :end-column 18}}, split-sentences {:protocol-inline nil, :meta {:file "/Users/conor/src/active/cloze-devcards/src/cloze_devcards/egg.cljs", :line 158, :column 7, :end-line 158, :end-column 22, :arglists (quote ([text]))}, :name cloze-devcards.egg/split-sentences, :variadic false, :file "src/cloze_devcards/egg.cljs", :end-column 22, :method-params ([text]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 158, :end-line 158, :max-fixed-arity 1, :fn-var true, :arglists (quote ([text]))}, t_cloze_devcards$egg23089 {:num-fields 1, :protocols #{cljs.core/IMeta cljs.core/IWithMeta devcards.core/IDevcardOptions}, :name cloze-devcards.egg/t_cloze_devcards$egg23089, :file "src/cloze_devcards/egg.cljs", :type true, :anonymous true, :column 1, :line 244, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, eggs {:name cloze-devcards.egg/eggs, :file "src/cloze_devcards/egg.cljs", :line 85, :column 1, :end-line 85, :end-column 10, :meta {:file "/Users/conor/src/active/cloze-devcards/src/cloze_devcards/egg.cljs", :line 85, :column 6, :end-line 85, :end-column 10}}, cloze-string3 {:protocol-inline nil, :meta {:file "/Users/conor/src/active/cloze-devcards/src/cloze_devcards/egg.cljs", :line 276, :column 7, :end-line 276, :end-column 20, :arglists (quote ([text]))}, :name cloze-devcards.egg/cloze-string3, :variadic false, :file "src/cloze_devcards/egg.cljs", :end-column 20, :method-params ([text]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 276, :end-line 276, :max-fixed-arity 1, :fn-var true, :arglists (quote ([text]))}, t_cloze_devcards$egg23068 {:num-fields 1, :protocols #{cljs.core/IMeta cljs.core/IWithMeta devcards.core/IDevcardOptions}, :name cloze-devcards.egg/t_cloze_devcards$egg23068, :file "src/cloze_devcards/egg.cljs", :type true, :anonymous true, :column 1, :line 190, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, n-leven {:protocol-inline nil, :meta {:file "/Users/conor/src/active/cloze-devcards/src/cloze_devcards/egg.cljs", :line 394, :column 15, :end-line 394, :end-column 22, :arglists (quote ([n word set]))}, :name cloze-devcards.egg/n-leven, :variadic false, :file "src/cloze_devcards/egg.cljs", :end-column 22, :method-params ([n word set]), :protocol-impl nil, :arglists-meta (nil nil), :column 9, :line 394, :end-line 394, :max-fixed-arity 3, :fn-var true, :arglists (quote ([n word set]))}, ->t_cloze_devcards$egg23068 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cljs.core/IMeta cljs.core/IWithMeta devcards.core/IDevcardOptions}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([meta23069])), :file nil}, :protocols #{cljs.core/IMeta cljs.core/IWithMeta devcards.core/IDevcardOptions}, :name cloze-devcards.egg/->t_cloze_devcards$egg23068, :variadic false, :file "src/cloze_devcards/egg.cljs", :method-params ([meta23069]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 1, :factory :positional, :line 190, :max-fixed-arity 1, :fn-var true, :arglists (quote ([meta23069])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_cloze_devcards$egg23199 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cljs.core/IMeta cljs.core/IWithMeta devcards.core/IDevcardOptions}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([meta23200])), :file nil}, :protocols #{cljs.core/IMeta cljs.core/IWithMeta devcards.core/IDevcardOptions}, :name cloze-devcards.egg/->t_cloze_devcards$egg23199, :variadic false, :file "src/cloze_devcards/egg.cljs", :method-params ([meta23200]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 1, :factory :positional, :line 293, :max-fixed-arity 1, :fn-var true, :arglists (quote ([meta23200])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, cloze-delete {:protocol-inline nil, :meta {:file "/Users/conor/src/active/cloze-devcards/src/cloze_devcards/egg.cljs", :line 178, :column 7, :end-line 178, :end-column 19, :arglists (quote ([text word]))}, :name cloze-devcards.egg/cloze-delete, :variadic false, :file "src/cloze_devcards/egg.cljs", :end-column 19, :method-params ([text word]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 178, :end-line 178, :max-fixed-arity 2, :fn-var true, :arglists (quote ([text word]))}, t_cloze_devcards$egg23065 {:num-fields 1, :protocols #{cljs.core/IMeta cljs.core/IWithMeta devcards.core/IDevcardOptions}, :name cloze-devcards.egg/t_cloze_devcards$egg23065, :file "src/cloze_devcards/egg.cljs", :type true, :anonymous true, :column 1, :line 165, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, levenshtein {:protocol-inline nil, :meta {:file "/Users/conor/src/active/cloze-devcards/src/cloze_devcards/egg.cljs", :line 356, :column 15, :end-line 356, :end-column 26, :arglists (quote ([str1 str2] [row-nr prevrow str1 str2])), :doc "Calculate the Levenshtein distance between two strings.", :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([str1 str2] [row-nr prevrow str1 str2]), :arglists ([str1 str2] [row-nr prevrow str1 str2]), :arglists-meta (nil nil)}}, :name cloze-devcards.egg/levenshtein, :variadic false, :file "src/cloze_devcards/egg.cljs", :end-column 26, :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([str1 str2] [row-nr prevrow str1 str2]), :arglists ([str1 str2] [row-nr prevrow str1 str2]), :arglists-meta (nil nil)}, :method-params ([str1 str2] [row-nr prevrow str1 str2]), :protocol-impl nil, :arglists-meta (nil nil), :column 9, :line 356, :end-line 356, :max-fixed-arity 4, :fn-var true, :arglists ([str1 str2] [row-nr prevrow str1 str2]), :doc "Calculate the Levenshtein distance between two strings."}, re-word {:name cloze-devcards.egg/re-word, :file "src/cloze_devcards/egg.cljs", :line 207, :column 1, :end-line 207, :end-column 13, :meta {:file "/Users/conor/src/active/cloze-devcards/src/cloze_devcards/egg.cljs", :line 207, :column 6, :end-line 207, :end-column 13}}, uniq-words {:protocol-inline nil, :meta {:file "/Users/conor/src/active/cloze-devcards/src/cloze_devcards/egg.cljs", :line 503, :column 15, :end-line 503, :end-column 25, :arglists (quote ([text]))}, :name cloze-devcards.egg/uniq-words, :variadic false, :file "src/cloze_devcards/egg.cljs", :end-column 25, :method-params ([text]), :protocol-impl nil, :arglists-meta (nil nil), :column 9, :line 503, :end-line 503, :max-fixed-arity 1, :fn-var true, :arglists (quote ([text]))}, ->t_cloze_devcards$egg23065 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cljs.core/IMeta cljs.core/IWithMeta devcards.core/IDevcardOptions}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([meta23066])), :file nil}, :protocols #{cljs.core/IMeta cljs.core/IWithMeta devcards.core/IDevcardOptions}, :name cloze-devcards.egg/->t_cloze_devcards$egg23065, :variadic false, :file "src/cloze_devcards/egg.cljs", :method-params ([meta23066]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 1, :factory :positional, :line 165, :max-fixed-arity 1, :fn-var true, :arglists (quote ([meta23066])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_cloze_devcards$egg23089 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cljs.core/IMeta cljs.core/IWithMeta devcards.core/IDevcardOptions}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([meta23090])), :file nil}, :protocols #{cljs.core/IMeta cljs.core/IWithMeta devcards.core/IDevcardOptions}, :name cloze-devcards.egg/->t_cloze_devcards$egg23089, :variadic false, :file "src/cloze_devcards/egg.cljs", :method-params ([meta23090]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 1, :factory :positional, :line 244, :max-fixed-arity 1, :fn-var true, :arglists (quote ([meta23090])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, sentences {:protocol-inline nil, :meta {:file "/Users/conor/src/active/cloze-devcards/src/cloze_devcards/egg.cljs", :line 495, :column 15, :end-line 495, :end-column 24, :arglists (quote ([text]))}, :name cloze-devcards.egg/sentences, :variadic false, :file "src/cloze_devcards/egg.cljs", :end-column 24, :method-params ([text]), :protocol-impl nil, :arglists-meta (nil nil), :column 9, :line 495, :end-line 495, :max-fixed-arity 1, :fn-var true, :arglists (quote ([text]))}, cloze-string2 {:protocol-inline nil, :meta {:file "/Users/conor/src/active/cloze-devcards/src/cloze_devcards/egg.cljs", :line 253, :column 7, :end-line 253, :end-column 20, :arglists (quote ([text]))}, :name cloze-devcards.egg/cloze-string2, :variadic false, :file "src/cloze_devcards/egg.cljs", :end-column 20, :method-params ([text]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 253, :end-line 253, :max-fixed-arity 1, :fn-var true, :arglists (quote ([text]))}, nextelt {:protocol-inline nil, :meta {:file "/Users/conor/src/active/cloze-devcards/src/cloze_devcards/egg.cljs", :line 330, :column 15, :end-line 330, :end-column 22, :arglists (quote ([char1 char2 prevrow thisrow position])), :doc "Given two characters, the previous row, and a row we are\n  building, determine out the next element for this row."}, :name cloze-devcards.egg/nextelt, :variadic false, :file "src/cloze_devcards/egg.cljs", :end-column 22, :method-params ([char1 char2 prevrow thisrow position]), :protocol-impl nil, :arglists-meta (nil nil), :column 9, :line 330, :end-line 330, :max-fixed-arity 5, :fn-var true, :arglists (quote ([char1 char2 prevrow thisrow position])), :doc "Given two characters, the previous row, and a row we are\n  building, determine out the next element for this row."}, textstate {:name cloze-devcards.egg/textstate, :file "src/cloze_devcards/egg.cljs", :line 155, :column 1, :end-line 155, :end-column 19, :meta {:file "/Users/conor/src/active/cloze-devcards/src/cloze_devcards/egg.cljs", :line 155, :column 10, :end-line 155, :end-column 19}}, nextrow {:protocol-inline nil, :meta {:file "/Users/conor/src/active/cloze-devcards/src/cloze_devcards/egg.cljs", :line 342, :column 15, :end-line 342, :end-column 22, :arglists (quote ([char1 str2 prevrow thisrow])), :doc "Based on the next character from string1 and the whole of string2\n  calculate the next row. Initially thisrow contains one number."}, :name cloze-devcards.egg/nextrow, :variadic false, :file "src/cloze_devcards/egg.cljs", :end-column 22, :method-params ([char1 str2 prevrow thisrow]), :protocol-impl nil, :arglists-meta (nil nil), :column 9, :line 342, :end-line 342, :max-fixed-arity 4, :fn-var true, :arglists (quote ([char1 str2 prevrow thisrow])), :doc "Based on the next character from string1 and the whole of string2\n  calculate the next row. Initially thisrow contains one number."}, t_cloze_devcards$egg23199 {:num-fields 1, :protocols #{cljs.core/IMeta cljs.core/IWithMeta devcards.core/IDevcardOptions}, :name cloze-devcards.egg/t_cloze_devcards$egg23199, :file "src/cloze_devcards/egg.cljs", :type true, :anonymous true, :column 1, :line 293, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, more-than-in-map {:protocol-inline nil, :meta {:file "/Users/conor/src/active/cloze-devcards/src/cloze_devcards/egg.cljs", :line 464, :column 15, :end-line 464, :end-column 31, :arglists (quote ([n m]))}, :name cloze-devcards.egg/more-than-in-map, :variadic false, :file "src/cloze_devcards/egg.cljs", :end-column 31, :method-params ([n m]), :protocol-impl nil, :arglists-meta (nil nil), :column 9, :line 464, :end-line 464, :max-fixed-arity 2, :fn-var true, :arglists (quote ([n m]))}, setf {:name cloze-devcards.egg/setf, :file "src/cloze_devcards/egg.cljs", :line 454, :column 9, :end-line 454, :end-column 18, :meta {:file "/Users/conor/src/active/cloze-devcards/src/cloze_devcards/egg.cljs", :line 454, :column 14, :end-line 454, :end-column 18}}, ftext {:name cloze-devcards.egg/ftext, :file "src/cloze_devcards/egg.cljs", :line 433, :column 9, :end-line 433, :end-column 19, :meta {:file "/Users/conor/src/active/cloze-devcards/src/cloze_devcards/egg.cljs", :line 433, :column 14, :end-line 433, :end-column 19}}, wordmap {:protocol-inline nil, :meta {:file "/Users/conor/src/active/cloze-devcards/src/cloze_devcards/egg.cljs", :line 458, :column 15, :end-line 458, :end-column 22, :arglists (quote ([text]))}, :name cloze-devcards.egg/wordmap, :variadic false, :file "src/cloze_devcards/egg.cljs", :end-column 22, :method-params ([text]), :protocol-impl nil, :arglists-meta (nil nil), :column 9, :line 458, :end-line 458, :max-fixed-arity 1, :fn-var true, :arglists (quote ([text]))}, find-levenshtein {:protocol-inline nil, :meta {:file "/Users/conor/src/active/cloze-devcards/src/cloze_devcards/egg.cljs", :line 375, :column 15, :end-line 375, :end-column 31, :arglists (quote ([n w s])), :doc "Takes a value a word and a set and returns a set of all the words that are within the levensthein diff of value to that word"}, :name cloze-devcards.egg/find-levenshtein, :variadic false, :file "src/cloze_devcards/egg.cljs", :end-column 31, :method-params ([n w s]), :protocol-impl nil, :arglists-meta (nil nil), :column 9, :line 375, :end-line 375, :max-fixed-arity 3, :fn-var true, :arglists (quote ([n w s])), :doc "Takes a value a word and a set and returns a set of all the words that are within the levensthein diff of value to that word"}}, :require-macros {reagent.ratom reagent.ratom, dc devcards.core, devcards.core devcards.core}, :cljs.analyzer/constants {:seen #{:path meta23066 :fill-in-blank2 :frame meta23200 :key :inspect-data :button :func :name meta23090 :documentation :div :card meta23069 :main-obj :watch-atom :initial-data :cloze_devcards.egg meta23145 :cloze-card1 :eggs-card :fill-in-blank1 :options :h1 :cloze2* :heading :text :hide-border}, :order [:text :path :func :cloze_devcards.egg :eggs-card :name :documentation :main-obj :initial-data :options meta23066 :inspect-data :frame :heading :watch-atom :cloze-card1 meta23069 :card :hide-border :div :h1 :button :key :cloze2* meta23090 :fill-in-blank1 meta23145 :fill-in-blank2 meta23200]}, :doc nil}